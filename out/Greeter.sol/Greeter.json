{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Greeter_InvalidGreeting",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Greeter_OnlyOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        }
      ],
      "name": "GreetingSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "OWNER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "greet",
      "outputs": [
        {
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "greeting",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_greeting",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_test",
          "type": "uint256"
        }
      ],
      "name": "setGreeting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162000a7d38038062000a7d833981016040819052620000349162000243565b33608052600180546001600160a01b0319166001600160a01b0383161781556200006090839062000068565b505062000381565b6080516001600160a01b0316336001600160a01b0316146200009d57604051630bec364760e31b815260040160405180910390fd5b815160208301207f3a2db9fe7908dcc36d81824d2338fc3f1aff49ac357dd8c4840527fba27a5b9001620000e4576040516342883a0560e11b815260040160405180910390fd5b8151620000f990600090602085019062000137565b507fad181ee258ff92d26bf7ed2e6b571ef1cba3afc45f028b863b0f02adaffc2f06826040516200012b919062000310565b60405180910390a15050565b828054620001459062000345565b90600052602060002090601f016020900481019282620001695760008555620001b4565b82601f106200018457805160ff1916838001178555620001b4565b82800160010185558215620001b4579182015b82811115620001b457825182559160200191906001019062000197565b50620001c2929150620001c6565b5090565b5b80821115620001c25760008155600101620001c7565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000210578181015183820152602001620001f6565b8381111562000220576000848401525b50505050565b80516001600160a01b03811681146200023e57600080fd5b919050565b600080604083850312156200025757600080fd5b82516001600160401b03808211156200026f57600080fd5b818501915085601f8301126200028457600080fd5b815181811115620002995762000299620001dd565b604051601f8201601f19908116603f01168101908382118183101715620002c457620002c4620001dd565b81604052828152886020848701011115620002de57600080fd5b620002f1836020830160208801620001f3565b8096505050505050620003076020840162000226565b90509250929050565b602081526000825180602084015262000331816040850160208701620001f3565b601f01601f19169190910160400192915050565b600181811c908216806200035a57607f821691505b6020821081036200037b57634e487b7160e01b600052602260045260246000fd5b50919050565b6080516106da620003a3600039600081816071015261013501526106da6000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063cfae321711610050578063cfae3217146100d2578063ef690cc0146100e8578063fc0c546a146100fd57600080fd5b8063117803e31461006c57806382884df4146100bd575b600080fd5b6100937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d06100cb3660046104be565b61011d565b005b6100da61023a565b6040516100b49291906105fc565b6100f0610368565b6040516100b4919061061e565b6001546100939073ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461018c576040517f5f61b23800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160208301207f3a2db9fe7908dcc36d81824d2338fc3f1aff49ac357dd8c4840527fba27a5b90016101eb576040517f8510740a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516101fe9060009060208501906103f6565b507fad181ee258ff92d26bf7ed2e6b571ef1cba3afc45f028b863b0f02adaffc2f068260405161022e919061061e565b60405180910390a15050565b6060600080805461024a90610638565b80601f016020809104026020016040519081016040528092919081815260200182805461027690610638565b80156102c35780601f10610298576101008083540402835291602001916102c3565b820191906000526020600020905b8154815290600101906020018083116102a657829003601f168201915b50506001546040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015294965073ffffffffffffffffffffffffffffffffffffffff16936370a08231935060240191506103219050565b602060405180830381865afa15801561033e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610362919061068b565b90509091565b6000805461037590610638565b80601f01602080910402602001604051908101604052809291908181526020018280546103a190610638565b80156103ee5780601f106103c3576101008083540402835291602001916103ee565b820191906000526020600020905b8154815290600101906020018083116103d157829003601f168201915b505050505081565b82805461040290610638565b90600052602060002090601f016020900481019282610424576000855561046a565b82601f1061043d57805160ff191683800117855561046a565b8280016001018555821561046a579182015b8281111561046a57825182559160200191906001019061044f565b5061047692915061047a565b5090565b5b80821115610476576000815560010161047b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156104d157600080fd5b823567ffffffffffffffff808211156104e957600080fd5b818501915085601f8301126104fd57600080fd5b81358181111561050f5761050f61048f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156105555761055561048f565b8160405282815288602084870101111561056e57600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b6000815180845260005b818110156105b75760208185018101518683018201520161059b565b818111156105c9576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60408152600061060f6040830185610591565b90508260208301529392505050565b6020815260006106316020830184610591565b9392505050565b600181811c9082168061064c57607f821691505b602082108103610685577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006020828403121561069d57600080fd5b505191905056fea2646970667358221220833b8d91499d57671febbc2701de54a98d43fabbb4bd705a67b92120f8baad6764736f6c634300080e0033",
    "sourceMap": "185:1380:1:-:0;;;755:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;821:10;813:18;;837:5;:14;;-1:-1:-1;;;;;;837:14:1;-1:-1:-1;;;;;837:14:1;;;;;857:25;;869:9;;857:11;:25::i;:::-;755:132;;185:1380;;918:245;1504:5;;-1:-1:-1;;;;;1490:19:1;:10;-1:-1:-1;;;;;1490:19:1;;1486:66;;1526:19;;-1:-1:-1;;;1526:19:1;;;;;;;;;;;1486:66;1006:27;;::::1;::::0;::::1;::::0;:44;;1002:97:::1;;1067:25;;-1:-1:-1::0;;;1067:25:1::1;;;;;;;;;;;1002:97;1105:20:::0;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1136:22;1148:9;1136:22;;;;;;:::i;:::-;;;;;;;;918:245:::0;;:::o;185:1380::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;185:1380:1;;;-1:-1:-1;185:1380:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:4;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:258;218:1;228:113;242:6;239:1;236:13;228:113;;;318:11;;;312:18;299:11;;;292:39;264:2;257:10;228:113;;;359:6;356:1;353:13;350:48;;;394:1;385:6;380:3;376:16;369:27;350:48;;146:258;;;:::o;409:185::-;496:13;;-1:-1:-1;;;;;538:31:4;;528:42;;518:70;;584:1;581;574:12;518:70;409:185;;;:::o;599:999::-;702:6;710;763:2;751:9;742:7;738:23;734:32;731:52;;;779:1;776;769:12;731:52;806:16;;-1:-1:-1;;;;;871:14:4;;;868:34;;;898:1;895;888:12;868:34;936:6;925:9;921:22;911:32;;981:7;974:4;970:2;966:13;962:27;952:55;;1003:1;1000;993:12;952:55;1032:2;1026:9;1054:2;1050;1047:10;1044:36;;;1060:18;;:::i;:::-;1135:2;1129:9;1103:2;1189:13;;-1:-1:-1;;1185:22:4;;;1209:2;1181:31;1177:40;1165:53;;;1233:18;;;1253:22;;;1230:46;1227:72;;;1279:18;;:::i;:::-;1319:10;1315:2;1308:22;1354:2;1346:6;1339:18;1396:7;1389:4;1384:2;1380;1376:11;1372:22;1369:35;1366:55;;;1417:1;1414;1407:12;1366:55;1430:59;1486:2;1479:4;1471:6;1467:17;1460:4;1456:2;1452:13;1430:59;:::i;:::-;1508:6;1498:16;;;;;;;1533:59;1586:4;1575:9;1571:20;1533:59;:::i;:::-;1523:69;;599:999;;;;;:::o;1603:383::-;1752:2;1741:9;1734:21;1715:4;1784:6;1778:13;1827:6;1822:2;1811:9;1807:18;1800:34;1843:66;1902:6;1897:2;1886:9;1882:18;1877:2;1869:6;1865:15;1843:66;:::i;:::-;1970:2;1949:15;-1:-1:-1;;1945:29:4;1930:45;;;;1977:2;1926:54;;1603:383;-1:-1:-1;;1603:383:4:o;1991:380::-;2070:1;2066:12;;;;2113;;;2134:61;;2188:4;2180:6;2176:17;2166:27;;2134:61;2241:2;2233:6;2230:14;2210:18;2207:38;2204:161;;2287:10;2282:3;2278:20;2275:1;2268:31;2322:4;2319:1;2312:15;2350:4;2347:1;2340:15;2204:161;;1991:380;;;:::o;:::-;185:1380:1;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c8063cfae321711610050578063cfae3217146100d2578063ef690cc0146100e8578063fc0c546a146100fd57600080fd5b8063117803e31461006c57806382884df4146100bd575b600080fd5b6100937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d06100cb3660046104be565b61011d565b005b6100da61023a565b6040516100b49291906105fc565b6100f0610368565b6040516100b4919061061e565b6001546100939073ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461018c576040517f5f61b23800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160208301207f3a2db9fe7908dcc36d81824d2338fc3f1aff49ac357dd8c4840527fba27a5b90016101eb576040517f8510740a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516101fe9060009060208501906103f6565b507fad181ee258ff92d26bf7ed2e6b571ef1cba3afc45f028b863b0f02adaffc2f068260405161022e919061061e565b60405180910390a15050565b6060600080805461024a90610638565b80601f016020809104026020016040519081016040528092919081815260200182805461027690610638565b80156102c35780601f10610298576101008083540402835291602001916102c3565b820191906000526020600020905b8154815290600101906020018083116102a657829003601f168201915b50506001546040517f70a0823100000000000000000000000000000000000000000000000000000000815233600482015294965073ffffffffffffffffffffffffffffffffffffffff16936370a08231935060240191506103219050565b602060405180830381865afa15801561033e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610362919061068b565b90509091565b6000805461037590610638565b80601f01602080910402602001604051908101604052809291908181526020018280546103a190610638565b80156103ee5780601f106103c3576101008083540402835291602001916103ee565b820191906000526020600020905b8154815290600101906020018083116103d157829003601f168201915b505050505081565b82805461040290610638565b90600052602060002090601f016020900481019282610424576000855561046a565b82601f1061043d57805160ff191683800117855561046a565b8280016001018555821561046a579182015b8281111561046a57825182559160200191906001019061044f565b5061047692915061047a565b5090565b5b80821115610476576000815560010161047b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156104d157600080fd5b823567ffffffffffffffff808211156104e957600080fd5b818501915085601f8301126104fd57600080fd5b81358181111561050f5761050f61048f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156105555761055561048f565b8160405282815288602084870101111561056e57600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b6000815180845260005b818110156105b75760208185018101518683018201520161059b565b818111156105c9576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60408152600061060f6040830185610591565b90508260208301529392505050565b6020815260006106316020830184610591565b9392505050565b600181811c9082168061064c57607f821691505b602082108103610685577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006020828403121561069d57600080fd5b505191905056fea2646970667358221220833b8d91499d57671febbc2701de54a98d43fabbb4bd705a67b92120f8baad6764736f6c634300080e0033",
    "sourceMap": "185:1380:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;442:30;;;;;;;;190:42:4;178:55;;;160:74;;148:2;133:18;442:30:1;;;;;;;;918:245;;;;;;:::i;:::-;;:::i;:::-;;1194:158;;;:::i;:::-;;;;;;;;:::i;504:22::-;;;:::i;:::-;;;;;;;:::i;558:19::-;;;;;;;;;918:245;1490:10;:19;1504:5;1490:19;;1486:66;;1526:19;;;;;;;;;;;;;;1486:66;1006:27;;::::1;::::0;::::1;::::0;:44;;1002:97:::1;;1067:25;;;;;;;;;;;;;;1002:97;1105:20:::0;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1136:22;1148:9;1136:22;;;;;;:::i;:::-;;;;;;;;918:245:::0;;:::o;1194:158::-;1234:23;1259:16;1295:8;1283:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1320:5:1;;:27;;;;;1336:10;1320:27;;;160:74:4;1283:20:1;;-1:-1:-1;1320:5:1;;;:15;;-1:-1:-1;133:18:4;;;-1:-1:-1;1320:27:1;;-1:-1:-1;14:226:4;1320:27:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1309:38;;1194:158;;:::o;504:22::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;245:184:4;297:77;294:1;287:88;394:4;391:1;384:15;418:4;415:1;408:15;434:1059;512:6;520;573:2;561:9;552:7;548:23;544:32;541:52;;;589:1;586;579:12;541:52;629:9;616:23;658:18;699:2;691:6;688:14;685:34;;;715:1;712;705:12;685:34;753:6;742:9;738:22;728:32;;798:7;791:4;787:2;783:13;779:27;769:55;;820:1;817;810:12;769:55;856:2;843:16;878:2;874;871:10;868:36;;;884:18;;:::i;:::-;1018:2;1012:9;1080:4;1072:13;;923:66;1068:22;;;1092:2;1064:31;1060:40;1048:53;;;1116:18;;;1136:22;;;1113:46;1110:72;;;1162:18;;:::i;:::-;1202:10;1198:2;1191:22;1237:2;1229:6;1222:18;1279:7;1272:4;1267:2;1263;1259:11;1255:22;1252:35;1249:55;;;1300:1;1297;1290:12;1249:55;1360:2;1353:4;1349:2;1345:13;1338:4;1330:6;1326:17;1313:50;1407:1;1400:4;1383:15;;;1379:26;;1372:37;1383:15;1466:20;;;;1453:34;;-1:-1:-1;;;;;;434:1059:4:o;1498:531::-;1540:3;1578:5;1572:12;1605:6;1600:3;1593:19;1630:1;1640:162;1654:6;1651:1;1648:13;1640:162;;;1716:4;1772:13;;;1768:22;;1762:29;1744:11;;;1740:20;;1733:59;1669:12;1640:162;;;1820:6;1817:1;1814:13;1811:87;;;1886:1;1879:4;1870:6;1865:3;1861:16;1857:27;1850:38;1811:87;-1:-1:-1;1943:2:4;1931:15;1948:66;1927:88;1918:98;;;;2018:4;1914:109;;1498:531;-1:-1:-1;;1498:531:4:o;2034:291::-;2211:2;2200:9;2193:21;2174:4;2231:45;2272:2;2261:9;2257:18;2249:6;2231:45;:::i;:::-;2223:53;;2312:6;2307:2;2296:9;2292:18;2285:34;2034:291;;;;;:::o;2330:220::-;2479:2;2468:9;2461:21;2442:4;2499:45;2540:2;2529:9;2525:18;2517:6;2499:45;:::i;:::-;2491:53;2330:220;-1:-1:-1;;;2330:220:4:o;2800:437::-;2879:1;2875:12;;;;2922;;;2943:61;;2997:4;2989:6;2985:17;2975:27;;2943:61;3050:2;3042:6;3039:14;3019:18;3016:38;3013:218;;3087:77;3084:1;3077:88;3188:4;3185:1;3178:15;3216:4;3213:1;3206:15;3013:218;;2800:437;;;:::o;3242:184::-;3312:6;3365:2;3353:9;3344:7;3340:23;3336:32;3333:52;;;3381:1;3378;3371:12;3333:52;-1:-1:-1;3404:16:4;;3242:184;-1:-1:-1;3242:184:4:o",
    "linkReferences": {},
    "immutableReferences": {
      "127": [
        {
          "start": 113,
          "length": 32
        },
        {
          "start": 309,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "OWNER()": "117803e3",
    "greet()": "cfae3217",
    "greeting()": "ef690cc0",
    "setGreeting(string,uint256)": "82884df4",
    "token()": "fc0c546a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Greeter_InvalidGreeting\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Greeter_OnlyOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"}],\"name\":\"GreetingSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"greet\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"greeting\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_greeting\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_test\",\"type\":\"uint256\"}],\"name\":\"setGreeting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"Greeter_InvalidGreeting()\":[{\"details\":\"Empty string is an invalid greeting\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_greeting\":\"Initial greeting\",\"_token\":\"Initial token\"}},\"greet()\":{\"returns\":{\"_balance\":\" Current token balance of the caller\",\"_greeting\":\"The greeting\"}},\"setGreeting(string,uint256)\":{\"details\":\"Only callable by the owner\",\"params\":{\"_newGreeting\":\"The new greeting to be set\"}}},\"stateVariables\":{\"OWNER\":{\"details\":\"The owner will always be the deployer of the contract\",\"return\":\"The owner of the contract\",\"returns\":{\"_0\":\"The owner of the contract\"}},\"_EMPTY_STRING\":{\"details\":\"result of doing keccak256(bytes(''))\"},\"greeting\":{\"return\":\"The greeting\",\"returns\":{\"_0\":\"The greeting\"}},\"token\":{\"return\":\"The address of the token\",\"returns\":{\"_0\":\"The address of the token\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"Greeter_InvalidGreeting()\":[{\"notice\":\"Throws if the greeting set is invalid\"}],\"Greeter_OnlyOwner()\":[{\"notice\":\"Throws if the function was called by someone else than the owner\"}]},\"events\":{\"GreetingSet(string)\":{\"notice\":\"Greeting has changed\"}},\"kind\":\"user\",\"methods\":{\"OWNER()\":{\"notice\":\"Returns the owner of the contract\"},\"constructor\":{\"notice\":\"Defines the owner to the msg.sender and sets the initial greeting\"},\"greet()\":{\"notice\":\"Returns set previously set greeting\"},\"greeting()\":{\"notice\":\"Returns the greeting\"},\"setGreeting(string,uint256)\":{\"notice\":\"Sets a new greeting\"},\"token()\":{\"notice\":\"Returns the token used to greet callers\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity/contracts/Greeter.sol\":\"Greeter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":contracts/=solidity/contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":interfaces/=solidity/interfaces/\",\":isolmate/=lib/isolmate/src/\",\":prb-test/=lib/prb-test/src/\",\":prb/test/=lib/prb-test/src/\",\":test/=solidity/test/\"]},\"sources\":{\"lib/isolmate/src/interfaces/tokens/IERC20.sol\":{\"keccak256\":\"0xea23a986a9efba47639b24eae7dbfd6936be01e5fc3530202fe1f4b8bb4131b8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://37e08545e18de038023d32de846032533af9513c0b7b84a6c5c371941b6bd5f7\",\"dweb:/ipfs/QmRYNSXwiJ9wE36ogE5J77g6pbGK7T7qqqAF99DZq3eW5B\"]},\"solidity/contracts/Greeter.sol\":{\"keccak256\":\"0xd02030c5135dea510b8698de68f62325d6a96f964e5518918ff355e626c697f1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a116ca7c00abcb5dd14aabca3a4e483fdf89ca54fc80f5d57f549fa3c4b94ea0\",\"dweb:/ipfs/Qmf8XjWxwcRb7tagtmun1rNynbzCW9e6w2NtvF1Vypj2qE\"]},\"solidity/interfaces/IGreeter.sol\":{\"keccak256\":\"0x60d9fa1d2074172270c33c5e41701da6d41154bf0b9b6d04f5041ce8ca21c823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ed1297ae71d73f6f16fd08fa205d2f89c3d89a2e0bf28a3450a552fecdcfe62\",\"dweb:/ipfs/QmcSJTARrSr9tsSbX1jT2WRpTdwpT4mdj5eR1ohSTLHcZD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.14+commit.80d49f37"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_greeting",
              "type": "string"
            },
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Greeter_InvalidGreeting"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Greeter_OnlyOwner"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_greeting",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GreetingSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OWNER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "greet",
          "outputs": [
            {
              "internalType": "string",
              "name": "_greeting",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "greeting",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_greeting",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_test",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGreeting"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_greeting": "Initial greeting",
              "_token": "Initial token"
            }
          },
          "greet()": {
            "returns": {
              "_balance": " Current token balance of the caller",
              "_greeting": "The greeting"
            }
          },
          "setGreeting(string,uint256)": {
            "details": "Only callable by the owner",
            "params": {
              "_newGreeting": "The new greeting to be set"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "OWNER()": {
            "notice": "Returns the owner of the contract"
          },
          "constructor": {
            "notice": "Defines the owner to the msg.sender and sets the initial greeting"
          },
          "greet()": {
            "notice": "Returns set previously set greeting"
          },
          "greeting()": {
            "notice": "Returns the greeting"
          },
          "setGreeting(string,uint256)": {
            "notice": "Sets a new greeting"
          },
          "token()": {
            "notice": "Returns the token used to greet callers"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":contracts/=solidity/contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":interfaces/=solidity/interfaces/",
        ":isolmate/=lib/isolmate/src/",
        ":prb-test/=lib/prb-test/src/",
        ":prb/test/=lib/prb-test/src/",
        ":test/=solidity/test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "solidity/contracts/Greeter.sol": "Greeter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/isolmate/src/interfaces/tokens/IERC20.sol": {
        "keccak256": "0xea23a986a9efba47639b24eae7dbfd6936be01e5fc3530202fe1f4b8bb4131b8",
        "urls": [
          "bzz-raw://37e08545e18de038023d32de846032533af9513c0b7b84a6c5c371941b6bd5f7",
          "dweb:/ipfs/QmRYNSXwiJ9wE36ogE5J77g6pbGK7T7qqqAF99DZq3eW5B"
        ],
        "license": "AGPL-3.0-only"
      },
      "solidity/contracts/Greeter.sol": {
        "keccak256": "0xd02030c5135dea510b8698de68f62325d6a96f964e5518918ff355e626c697f1",
        "urls": [
          "bzz-raw://a116ca7c00abcb5dd14aabca3a4e483fdf89ca54fc80f5d57f549fa3c4b94ea0",
          "dweb:/ipfs/Qmf8XjWxwcRb7tagtmun1rNynbzCW9e6w2NtvF1Vypj2qE"
        ],
        "license": "UNLICENSED"
      },
      "solidity/interfaces/IGreeter.sol": {
        "keccak256": "0x60d9fa1d2074172270c33c5e41701da6d41154bf0b9b6d04f5041ce8ca21c823",
        "urls": [
          "bzz-raw://0ed1297ae71d73f6f16fd08fa205d2f89c3d89a2e0bf28a3450a552fecdcfe62",
          "dweb:/ipfs/QmcSJTARrSr9tsSbX1jT2WRpTdwpT4mdj5eR1ohSTLHcZD"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "solidity/contracts/Greeter.sol",
    "id": 227,
    "exportedSymbols": {
      "Greeter": [
        226
      ],
      "IERC20": [
        112
      ],
      "IGreeter": [
        278
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1527:1",
    "nodes": [
      {
        "id": 114,
        "nodeType": "PragmaDirective",
        "src": "39:31:1",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".4",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 116,
        "nodeType": "ImportDirective",
        "src": "72:61:1",
        "nodes": [],
        "absolutePath": "lib/isolmate/src/interfaces/tokens/IERC20.sol",
        "file": "isolmate/interfaces/tokens/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 227,
        "sourceUnit": 113,
        "symbolAliases": [
          {
            "foreign": {
              "id": 115,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 112,
              "src": "80:6:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 118,
        "nodeType": "ImportDirective",
        "src": "134:49:1",
        "nodes": [],
        "absolutePath": "solidity/interfaces/IGreeter.sol",
        "file": "interfaces/IGreeter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 227,
        "sourceUnit": 279,
        "symbolAliases": [
          {
            "foreign": {
              "id": 117,
              "name": "IGreeter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 278,
              "src": "142:8:1",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 226,
        "nodeType": "ContractDefinition",
        "src": "185:1380:1",
        "nodes": [
          {
            "id": 124,
            "nodeType": "VariableDeclaration",
            "src": "302:108:1",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "254:45:1",
              "text": "@dev result of doing keccak256(bytes(''))"
            },
            "mutability": "constant",
            "name": "_EMPTY_STRING",
            "nameLocation": "328:13:1",
            "scope": 226,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 122,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "302:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
              "id": 123,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "344:66:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                "typeString": "int_const 8947...(69 digits omitted)...1552"
              },
              "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
            },
            "visibility": "internal"
          },
          {
            "id": 127,
            "nodeType": "VariableDeclaration",
            "src": "442:30:1",
            "nodes": [],
            "baseFunctions": [
              248
            ],
            "constant": false,
            "documentation": {
              "id": 125,
              "nodeType": "StructuredDocumentation",
              "src": "415:24:1",
              "text": "@inheritdoc IGreeter"
            },
            "functionSelector": "117803e3",
            "mutability": "immutable",
            "name": "OWNER",
            "nameLocation": "467:5:1",
            "scope": 226,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 126,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "442:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 130,
            "nodeType": "VariableDeclaration",
            "src": "504:22:1",
            "nodes": [],
            "baseFunctions": [
              254
            ],
            "constant": false,
            "documentation": {
              "id": 128,
              "nodeType": "StructuredDocumentation",
              "src": "477:24:1",
              "text": "@inheritdoc IGreeter"
            },
            "functionSelector": "ef690cc0",
            "mutability": "mutable",
            "name": "greeting",
            "nameLocation": "518:8:1",
            "scope": 226,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 129,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "504:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 134,
            "nodeType": "VariableDeclaration",
            "src": "558:19:1",
            "nodes": [],
            "baseFunctions": [
              261
            ],
            "constant": false,
            "documentation": {
              "id": 131,
              "nodeType": "StructuredDocumentation",
              "src": "531:24:1",
              "text": "@inheritdoc IGreeter"
            },
            "functionSelector": "fc0c546a",
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "572:5:1",
            "scope": 226,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$112",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 133,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 132,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 112,
                "src": "558:6:1"
              },
              "referencedDeclaration": 112,
              "src": "558:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$112",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 158,
            "nodeType": "FunctionDefinition",
            "src": "755:132:1",
            "nodes": [],
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "807:80:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 143,
                      "name": "OWNER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "813:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 144,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "821:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "821:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "813:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "813:18:1"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 148,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "837:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$112",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 149,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "845:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$112",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "837:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$112",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "837:14:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 153,
                        "name": "_greeting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "869:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "880:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 152,
                      "name": "setGreeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "857:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "857:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "857:25:1"
                }
              ]
            },
            "documentation": {
              "id": 135,
              "nodeType": "StructuredDocumentation",
              "src": "582:170:1",
              "text": " @notice Defines the owner to the msg.sender and sets the\n initial greeting\n @param _greeting Initial greeting\n @param _token Initial token"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_greeting",
                  "nameLocation": "781:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "767:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "799:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "792:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$112",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 139,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 138,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 112,
                      "src": "792:6:1"
                    },
                    "referencedDeclaration": 112,
                    "src": "792:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$112",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "766:40:1"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "807:0:1"
            },
            "scope": 226,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 190,
            "nodeType": "FunctionDefinition",
            "src": "918:245:1",
            "nodes": [],
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "996:167:1",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 171,
                              "name": "_greeting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "1022:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1016:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 169,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1016:5:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1016:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 168,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "1006:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1006:27:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 174,
                      "name": "_EMPTY_STRING",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "1037:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1006:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 180,
                  "nodeType": "IfStatement",
                  "src": "1002:97:1",
                  "trueBody": {
                    "id": 179,
                    "nodeType": "Block",
                    "src": "1052:47:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 176,
                            "name": "Greeter_InvalidGreeting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "1067:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1067:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 178,
                        "nodeType": "RevertStatement",
                        "src": "1060:32:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 181,
                      "name": "greeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "1105:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 182,
                      "name": "_greeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "1116:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1105:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:20:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 186,
                        "name": "_greeting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "1148:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 185,
                      "name": "GreetingSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 236,
                      "src": "1136:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "EmitStatement",
                  "src": "1131:27:1"
                }
              ]
            },
            "baseFunctions": [
              277
            ],
            "documentation": {
              "id": 159,
              "nodeType": "StructuredDocumentation",
              "src": "891:24:1",
              "text": "@inheritdoc IGreeter"
            },
            "functionSelector": "82884df4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 166,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 165,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 225,
                  "src": "986:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "986:9:1"
              }
            ],
            "name": "setGreeting",
            "nameLocation": "927:11:1",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "_greeting",
                  "nameLocation": "953:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "939:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "_test",
                  "nameLocation": "972:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "964:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "938:40:1"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:0:1"
            },
            "scope": 226,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 211,
            "nodeType": "FunctionDefinition",
            "src": "1194:158:1",
            "nodes": [],
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "1277:75:1",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 198,
                      "name": "_greeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 194,
                      "src": "1283:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 199,
                      "name": "greeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "1295:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1283:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:20:1"
                },
                {
                  "expression": {
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 202,
                      "name": "_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "1309:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 205,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1336:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1336:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 203,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "1320:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$112",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44,
                        "src": "1320:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1320:27:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1309:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "1309:38:1"
                }
              ]
            },
            "baseFunctions": [
              269
            ],
            "documentation": {
              "id": 191,
              "nodeType": "StructuredDocumentation",
              "src": "1167:24:1",
              "text": "@inheritdoc IGreeter"
            },
            "functionSelector": "cfae3217",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "greet",
            "nameLocation": "1203:5:1",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1208:2:1"
            },
            "returnParameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "_greeting",
                  "nameLocation": "1248:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "1234:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_balance",
                  "nameLocation": "1267:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "1259:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1233:43:1"
            },
            "scope": 226,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 225,
            "nodeType": "ModifierDefinition",
            "src": "1459:104:1",
            "nodes": [],
            "body": {
              "id": 224,
              "nodeType": "Block",
              "src": "1480:83:1",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 214,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1490:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1490:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 216,
                      "name": "OWNER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "1504:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1490:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 222,
                  "nodeType": "IfStatement",
                  "src": "1486:66:1",
                  "trueBody": {
                    "id": 221,
                    "nodeType": "Block",
                    "src": "1511:41:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 218,
                            "name": "Greeter_OnlyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "1526:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1526:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 220,
                        "nodeType": "RevertStatement",
                        "src": "1519:26:1"
                      }
                    ]
                  }
                },
                {
                  "id": 223,
                  "nodeType": "PlaceholderStatement",
                  "src": "1557:1:1"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "1356:100:1",
              "text": " @notice Reverts in case the function was not called by\n the owner of the contract"
            },
            "name": "onlyOwner",
            "nameLocation": "1468:9:1",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1477:2:1"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 119,
              "name": "IGreeter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 278,
              "src": "205:8:1"
            },
            "id": 120,
            "nodeType": "InheritanceSpecifier",
            "src": "205:8:1"
          }
        ],
        "canonicalName": "Greeter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          226,
          278
        ],
        "name": "Greeter",
        "nameLocation": "194:7:1",
        "scope": 227,
        "usedErrors": [
          239,
          242
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 1
}